{
  "swagger": "2.0",
  "info": {
    "title": "InterSystems IRIS REST CRUD for Integrated ML Demo",
    "description": "Rest API for the Integrated ML Demo on the Titanic database",
    "version": "0.1",
    "contact": {
      "email": "theophile.thierry@intersystems.com"
    },
    "license": {
      "name": " 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:52775",
  "basePath": "/api/titanic",
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "basicAuth": {
      "type": "basic"
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ],
  "paths": {
    "/": {
      "get": {
        "description": " IntegratedMLDemo general information ",
        "summary": " Server Info ",
        "operationId": "GetInfo",
        "responses": {
          "200": {
            "description": "(Expected Result)",
            "schema": {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "(Unexpected Error)"
          }
        }
      }
    },
    "/passengers": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "currpage",
            "type": "number",
            "description": " The current page at which the client is "
          },
          {
            "in": "query",
            "name": "pagesize",
            "type": "number",
            "description": " The number of passengers per page "
          }
        ],
        "description": " Retreive the total number of Passengers THEN the Passengers from currpage\\*(pagesize-1) to currpage\\*pagesize ",
        "summary": " Get number of passengers + \"pagesize\" records of Passenger class to print in the \"currpage\" page ",
        "operationId": "GetAllPassengers",
        "x-ISC_ServiceMethod": "GetAllPassengers",
        "responses": {
          "200": {
            "description": "(Expected Result)",
            "schema": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "type": "number"
                  },
                  {
                    "$ref": "#/definitions/Passenger"
                  }
                ]
              }
            }
          },
          "default": {
            "description": "(Unexpected Error)"
          }
        }
      },
      "post": {
        "description": " Create a new Titanic.Table.Passenger record ",
        "summary": " Create a Passenger ",
        "operationId": "CreatePassenger",
        "x-ISC_ServiceMethod": "CreatePassenger",
        "parameters": [
          {
            "name": "payloadBody",
            "in": "body",
            "description": "Request body contents",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Passenger"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(Expected Result)",
            "schema": {
              "type": "object",
              "properties": {
                "PassengerId": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "(Bad Request)"
          },
          "default": {
            "description": "(Unexpected Error)"
          }
        }
      }
    },
    "/passengers/{id}": {
      "get": {
        "description": " Return one record of Titanic.Table.Passenger ",
        "summary": " GET method to return JSON for a given passenger id",
        "operationId": "GetPassenger",
        "x-ISC_ServiceMethod": "GetPassenger",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "(Expected Result)",
            "schema": {
              "$ref": "#/definitions/Passenger"
            }
          },
          "204": {
            "description": "(Not Found)"
          },
          "default": {
            "description": "(Unexpected Error)"
          }
        }
      },
      "put": {
        "description": " Update a record of Titanic.Table.Passenger with id ",
        "summary": " Update a passenger with id",
        "operationId": "UpdatePassenger",
        "x-ISC_ServiceMethod": "UpdatePassenger",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          },
          {
            "name": "payloadBody",
            "in": "body",
            "description": "Request body contents",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Passenger"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(Expected Result)"
          },
          "204": {
            "description": "(Not Found)"
          },
          "400": {
            "description": "(Bad Request)"
          },
          "default": {
            "description": "(Unexpected Error)"
          }
        }
      },
      "delete": {
        "description": " Delete a record of Titanic.Table.Passenger with id ",
        "summary": " Delete a passenger with id",
        "operationId": "DeletePassenger",
        "x-ISC_ServiceMethod": "DeletePassenger",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "(Expected Result)"
          },
          "204": {
            "description": "(Not Found)"
          },
          "default": {
            "description": "(Unexpected Error)"
          }
        }
      }
    },
    "/passengers/": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "type": "string",
            "description": " Search passenger by name "
          }
        ],
        "description": " Retreive all the records of Titanic.Table.Passenger with \"name\" in their name ",
        "summary": " Get all records of Passenger class with \"name\" in their name ",
        "operationId": "SearchPassengers",
        "x-ISC_ServiceMethod": "SearchPassengers",
        "responses": {
          "200": {
            "description": "(Expected Result)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Passenger"
              }
            }
          },
          "default": {
            "description": "(Unexpected Error)"
          }
        }
      }
    },
    "/ml/models": {
      "get": {
        "description": " Retreive all created Models ",
        "summary": " Get all Models ",
        "operationId": "GetAllModels",
        "x-ISC_ServiceMethod": "GetAllModels",
        "responses": {
          "200": {
            "description": "(Expected Result)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ML_MODEL"
              }
            }
          },
          "default": {
            "description": "(Unexpected Error)"
          }
        }
      },
      "post": {
        "parameters": [
          {
            "in": "query",
            "required": true,
            "name": "modelName",
            "type": "string",
            "description": " The name of the Model to be created "
          },
          {
            "in": "query",
            "required": true,
            "name": "predicting",
            "type": "string",
            "description": " The name of the value to predict "
          }
        ],
        "description": " Create a Model named \"modelName\" and predicting \"predicting\" ",
        "summary": " Create a Model ",
        "operationId": "CreateModel",
        "x-ISC_ServiceMethod": "CreateModel",
        "responses": {
          "200": {
            "description": "(Expected Result)"
          },
          "400": {
            "description": "(Bad Request)"
          },
          "default": {
            "description": "(Unexpected Error)"
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "modelName",
            "required": true,
            "description": " Name of the model to be deleted ",
            "type": "string"
          }
        ],
        "description": " Delete a Model (along with all of its trained runs) ",
        "summary": " Delete a Model",
        "operationId": "DeleteModel",
        "x-ISC_ServiceMethod": "DeleteModel",
        "responses": {
          "200": {
            "description": "(Expected Result)"
          },
          "204": {
            "description": "(Not Found)"
          },
          "default": {
            "description": "(Unexpected Error)"
          }
        }
      }
    },
    "/ml/trainedmodels": {
      "get": {
        "description": " Retreive all trained models ",
        "summary": " Get all trained models ",
        "operationId": "GetTrainedModels",
        "x-ISC_ServiceMethod": "GetTrainedModels",
        "responses": {
          "200": {
            "description": "(Expected Result)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ML_TRAINED_MODEL"
              }
            }
          },
          "default": {
            "description": "(Unexpected Error)"
          }
        }
      }
    },
    "/ml/{modelName}/{runName}": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "modelName",
            "type": "string",
            "description": " The name of the Model to be trained "
          },
          {
            "in": "path",
            "required": true,
            "name": "runName",
            "type": "string",
            "description": " The name of the training run "
          }
        ],
        "description": " Train the Model named \"modelName\" and gives the name \"runName\" to the training run ",
        "summary": " Train a Model ",
        "operationId": "TrainModel",
        "x-ISC_ServiceMethod": "TrainModel",
        "responses": {
          "200": {
            "description": "(Expected Result)"
          },
          "400": {
            "description": "(Bad Request)"
          },
          "default": {
            "description": "(Unexpected Error)"
          }
        }
      }
    },
    "/ml/trainingruns": {
      "get": {
        "description": " Retreive all training runs  ",
        "summary": " Get all training runs ",
        "operationId": "GetTrainingRuns",
        "x-ISC_ServiceMethod": "GetTrainingRuns",
        "responses": {
          "200": {
            "description": "(Expected Result)",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ML_TRAINING_RUN"
              }
            }
          },
          "default": {
            "description": "(Unexpected Error)"
          }
        }
      }
    },
    "/ml/predict": {
      "post": {
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "description": " Model to predict with",
            "required": true,
            "type": "string"
          },
          {
            "name": "trainedModel",
            "in": "query",
            "description": " Trained Model to predict with ",
            "required": true,
            "type": "string"
          },
          {
            "name": "passenger",
            "in": "query",
            "description": " Id of passenger to predict ",
            "required": true,
            "type": "string"
          }
        ],
        "description": " Predict ",
        "summary": " Predict one passenger value with model ",
        "operationId": "Predict",
        "x-ISC_ServiceMethod": "Predict",
        "responses": {
          "200": {
            "description": "(Expected Result)",
            "schema": {
              "type": "object",
              "properties": {
                "PredictedValue": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "(Bad Request)"
          },
          "default": {
            "description": "(Unexpected Error)"
          }
        }
      }
    },
    "/ml/configuration": {
      "post": {
        "description": " Change ml configuration (H20 or AutoML) ",
        "summary": " Change ml configuration ",
        "operationId": "ChangeConfiguration",
        "x-ISC_ServiceMethod": "ChangeConfiguration",
        "parameters": [
          {
            "name": "payloadBody",
            "in": "body",
            "description": "Request body contents",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(Expected Result)"
          },
          "400": {
            "description": "(Bad Request)"
          },
          "default": {
            "description": "(Unexpected Error)"
          }
        }
      }
    }
  },
  "definitions": {
    "Passenger": {
      "type": "object",
      "properties": {
        "PassengerId": {
          "type": "integer"
        },
        "Survived": {
          "type": "boolean"
        },
        "Pclass": {
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Sex": {
          "type": "string"
        },
        "Age": {
          "type": "number"
        },
        "SibSp": {
          "type": "integer"
        },
        "Parch": {
          "type": "integer"
        },
        "Ticket": {
          "type": "string"
        },
        "Fare": {
          "type": "number"
        },
        "Cabin": {
          "type": "string"
        },
        "Embarked": {
          "type": "string"
        }
      }
    },
    "ML_MODEL": {
      "type": "object",
      "properties": {
        "MODEL_NAME": {
          "type": "string"
        },
        "DESCRIPTION": {
          "type": "string"
        },
        "PREDICTING_COLUMN_NAME": {
          "type": "string"
        },
        "PREDICTING_COLUMN_TYPE": {
          "type": "string"
        },
        "WITH_COLUMNS": {
          "type": "string"
        },
        "CREATE_TIMESTAMP": {
          "type": "string"
        },
        "DEFAULT_TRAINED_MODEL_NAME": {
          "type": "string"
        },
        "DEFAULT_SETTINGS": {
          "type": "string"
        },
        "DEFAULT_TRAINING_QUERY": {
          "type": "string"
        }
      }
    },
    "ML_TRAINED_MODEL": {
      "type": "object",
      "properties": {
        "MODEL_NAME": {
          "type": "string"
        },
        "TRAINED_MODEL_NAME": {
          "type": "string"
        },
        "PROVIDER": {
          "type": "string"
        },
        "TRAINED_TIMESTAMP": {
          "type": "string"
        },
        "MODEL_TYPE": {
          "type": "string"
        },
        "MODEL_INFO": {
          "type": "string"
        }
      }
    },
    "ML_TRAINING_RUN": {
      "type": "object",
      "properties": {
        "MODEL_NAME": {
          "type": "string"
        },
        "TRAINING_RUN_NAME": {
          "type": "string"
        },
        "PROVIDER": {
          "type": "string"
        },
        "START_TIMESTAMP": {
          "type": "string"
        },
        "COMPLETED_TIMESTAMP": {
          "type": "string"
        },
        "TRAINING_DURATION": {
          "type": "string"
        },
        "RUN_STATUS": {
          "type": "string"
        },
        "STATUS_CODE": {
          "type": "string"
        },
        "LOG": {
          "type": "string"
        },
        "SETTINGS": {
          "type": "string"
        },
        "ML_CONFIGURATION_NAME": {
          "type": "string"
        },
        "TRAINING_RUN_QUERY": {
          "type": "string"
        }
      }
    }
  }
}