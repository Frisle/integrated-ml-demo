# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class MlTrainingRun(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, model_name: str=None, training_run_name: str=None, provider: str=None, start_timestamp: str=None, completed_timestamp: str=None, training_duration: str=None, run_status: str=None, status_code: str=None, log: str=None, settings: str=None, ml_configuration_name: str=None, training_run_query: str=None):  # noqa: E501
        """MlTrainingRun - a model defined in Swagger

        :param model_name: The model_name of this MlTrainingRun.  # noqa: E501
        :type model_name: str
        :param training_run_name: The training_run_name of this MlTrainingRun.  # noqa: E501
        :type training_run_name: str
        :param provider: The provider of this MlTrainingRun.  # noqa: E501
        :type provider: str
        :param start_timestamp: The start_timestamp of this MlTrainingRun.  # noqa: E501
        :type start_timestamp: str
        :param completed_timestamp: The completed_timestamp of this MlTrainingRun.  # noqa: E501
        :type completed_timestamp: str
        :param training_duration: The training_duration of this MlTrainingRun.  # noqa: E501
        :type training_duration: str
        :param run_status: The run_status of this MlTrainingRun.  # noqa: E501
        :type run_status: str
        :param status_code: The status_code of this MlTrainingRun.  # noqa: E501
        :type status_code: str
        :param log: The log of this MlTrainingRun.  # noqa: E501
        :type log: str
        :param settings: The settings of this MlTrainingRun.  # noqa: E501
        :type settings: str
        :param ml_configuration_name: The ml_configuration_name of this MlTrainingRun.  # noqa: E501
        :type ml_configuration_name: str
        :param training_run_query: The training_run_query of this MlTrainingRun.  # noqa: E501
        :type training_run_query: str
        """
        self.swagger_types = {
            'model_name': str,
            'training_run_name': str,
            'provider': str,
            'start_timestamp': str,
            'completed_timestamp': str,
            'training_duration': str,
            'run_status': str,
            'status_code': str,
            'log': str,
            'settings': str,
            'ml_configuration_name': str,
            'training_run_query': str
        }

        self.attribute_map = {
            'model_name': 'modelName',
            'training_run_name': 'trainingRunName',
            'provider': 'provider',
            'start_timestamp': 'startTimestamp',
            'completed_timestamp': 'completedTimestamp',
            'training_duration': 'trainingDuration',
            'run_status': 'runStatus',
            'status_code': 'statusCode',
            'log': 'log',
            'settings': 'settings',
            'ml_configuration_name': 'mlConfigurationName',
            'training_run_query': 'trainingRunQuery'
        }

        self._model_name = model_name
        self._training_run_name = training_run_name
        self._provider = provider
        self._start_timestamp = start_timestamp
        self._completed_timestamp = completed_timestamp
        self._training_duration = training_duration
        self._run_status = run_status
        self._status_code = status_code
        self._log = log
        self._settings = settings
        self._ml_configuration_name = ml_configuration_name
        self._training_run_query = training_run_query

    @classmethod
    def from_dict(cls, dikt) -> 'MlTrainingRun':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The mlTrainingRun of this MlTrainingRun.  # noqa: E501
        :rtype: MlTrainingRun
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_name(self) -> str:
        """Gets the model_name of this MlTrainingRun.


        :return: The model_name of this MlTrainingRun.
        :rtype: str
        """
        return self._model_name

    @model_name.setter
    def model_name(self, model_name: str):
        """Sets the model_name of this MlTrainingRun.


        :param model_name: The model_name of this MlTrainingRun.
        :type model_name: str
        """

        self._model_name = model_name

    @property
    def training_run_name(self) -> str:
        """Gets the training_run_name of this MlTrainingRun.


        :return: The training_run_name of this MlTrainingRun.
        :rtype: str
        """
        return self._training_run_name

    @training_run_name.setter
    def training_run_name(self, training_run_name: str):
        """Sets the training_run_name of this MlTrainingRun.


        :param training_run_name: The training_run_name of this MlTrainingRun.
        :type training_run_name: str
        """

        self._training_run_name = training_run_name

    @property
    def provider(self) -> str:
        """Gets the provider of this MlTrainingRun.


        :return: The provider of this MlTrainingRun.
        :rtype: str
        """
        return self._provider

    @provider.setter
    def provider(self, provider: str):
        """Sets the provider of this MlTrainingRun.


        :param provider: The provider of this MlTrainingRun.
        :type provider: str
        """

        self._provider = provider

    @property
    def start_timestamp(self) -> str:
        """Gets the start_timestamp of this MlTrainingRun.


        :return: The start_timestamp of this MlTrainingRun.
        :rtype: str
        """
        return self._start_timestamp

    @start_timestamp.setter
    def start_timestamp(self, start_timestamp: str):
        """Sets the start_timestamp of this MlTrainingRun.


        :param start_timestamp: The start_timestamp of this MlTrainingRun.
        :type start_timestamp: str
        """

        self._start_timestamp = start_timestamp

    @property
    def completed_timestamp(self) -> str:
        """Gets the completed_timestamp of this MlTrainingRun.


        :return: The completed_timestamp of this MlTrainingRun.
        :rtype: str
        """
        return self._completed_timestamp

    @completed_timestamp.setter
    def completed_timestamp(self, completed_timestamp: str):
        """Sets the completed_timestamp of this MlTrainingRun.


        :param completed_timestamp: The completed_timestamp of this MlTrainingRun.
        :type completed_timestamp: str
        """

        self._completed_timestamp = completed_timestamp

    @property
    def training_duration(self) -> str:
        """Gets the training_duration of this MlTrainingRun.


        :return: The training_duration of this MlTrainingRun.
        :rtype: str
        """
        return self._training_duration

    @training_duration.setter
    def training_duration(self, training_duration: str):
        """Sets the training_duration of this MlTrainingRun.


        :param training_duration: The training_duration of this MlTrainingRun.
        :type training_duration: str
        """

        self._training_duration = training_duration

    @property
    def run_status(self) -> str:
        """Gets the run_status of this MlTrainingRun.


        :return: The run_status of this MlTrainingRun.
        :rtype: str
        """
        return self._run_status

    @run_status.setter
    def run_status(self, run_status: str):
        """Sets the run_status of this MlTrainingRun.


        :param run_status: The run_status of this MlTrainingRun.
        :type run_status: str
        """

        self._run_status = run_status

    @property
    def status_code(self) -> str:
        """Gets the status_code of this MlTrainingRun.


        :return: The status_code of this MlTrainingRun.
        :rtype: str
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code: str):
        """Sets the status_code of this MlTrainingRun.


        :param status_code: The status_code of this MlTrainingRun.
        :type status_code: str
        """

        self._status_code = status_code

    @property
    def log(self) -> str:
        """Gets the log of this MlTrainingRun.


        :return: The log of this MlTrainingRun.
        :rtype: str
        """
        return self._log

    @log.setter
    def log(self, log: str):
        """Sets the log of this MlTrainingRun.


        :param log: The log of this MlTrainingRun.
        :type log: str
        """

        self._log = log

    @property
    def settings(self) -> str:
        """Gets the settings of this MlTrainingRun.


        :return: The settings of this MlTrainingRun.
        :rtype: str
        """
        return self._settings

    @settings.setter
    def settings(self, settings: str):
        """Sets the settings of this MlTrainingRun.


        :param settings: The settings of this MlTrainingRun.
        :type settings: str
        """

        self._settings = settings

    @property
    def ml_configuration_name(self) -> str:
        """Gets the ml_configuration_name of this MlTrainingRun.


        :return: The ml_configuration_name of this MlTrainingRun.
        :rtype: str
        """
        return self._ml_configuration_name

    @ml_configuration_name.setter
    def ml_configuration_name(self, ml_configuration_name: str):
        """Sets the ml_configuration_name of this MlTrainingRun.


        :param ml_configuration_name: The ml_configuration_name of this MlTrainingRun.
        :type ml_configuration_name: str
        """

        self._ml_configuration_name = ml_configuration_name

    @property
    def training_run_query(self) -> str:
        """Gets the training_run_query of this MlTrainingRun.


        :return: The training_run_query of this MlTrainingRun.
        :rtype: str
        """
        return self._training_run_query

    @training_run_query.setter
    def training_run_query(self, training_run_query: str):
        """Sets the training_run_query of this MlTrainingRun.


        :param training_run_query: The training_run_query of this MlTrainingRun.
        :type training_run_query: str
        """

        self._training_run_query = training_run_query
