# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class MlValidationRun(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, model_name: str=None, trained_model_name: str=None, validation_run_name: str=None, start_timestamp: str=None, completed_timestamp: str=None, validation_duration: str=None, run_status: str=None, status_code: str=None, log: str=None, settings: str=None, validation_run_query: str=None):  # noqa: E501
        """MlValidationRun - a model defined in Swagger

        :param model_name: The model_name of this MlValidationRun.  # noqa: E501
        :type model_name: str
        :param trained_model_name: The trained_model_name of this MlValidationRun.  # noqa: E501
        :type trained_model_name: str
        :param validation_run_name: The validation_run_name of this MlValidationRun.  # noqa: E501
        :type validation_run_name: str
        :param start_timestamp: The start_timestamp of this MlValidationRun.  # noqa: E501
        :type start_timestamp: str
        :param completed_timestamp: The completed_timestamp of this MlValidationRun.  # noqa: E501
        :type completed_timestamp: str
        :param validation_duration: The validation_duration of this MlValidationRun.  # noqa: E501
        :type validation_duration: str
        :param run_status: The run_status of this MlValidationRun.  # noqa: E501
        :type run_status: str
        :param status_code: The status_code of this MlValidationRun.  # noqa: E501
        :type status_code: str
        :param log: The log of this MlValidationRun.  # noqa: E501
        :type log: str
        :param settings: The settings of this MlValidationRun.  # noqa: E501
        :type settings: str
        :param validation_run_query: The validation_run_query of this MlValidationRun.  # noqa: E501
        :type validation_run_query: str
        """
        self.swagger_types = {
            'model_name': str,
            'trained_model_name': str,
            'validation_run_name': str,
            'start_timestamp': str,
            'completed_timestamp': str,
            'validation_duration': str,
            'run_status': str,
            'status_code': str,
            'log': str,
            'settings': str,
            'validation_run_query': str
        }

        self.attribute_map = {
            'model_name': 'modelName',
            'trained_model_name': 'trainedModelName',
            'validation_run_name': 'validationRunName',
            'start_timestamp': 'startTimestamp',
            'completed_timestamp': 'completedTimestamp',
            'validation_duration': 'validationDuration',
            'run_status': 'runStatus',
            'status_code': 'statusCode',
            'log': 'log',
            'settings': 'settings',
            'validation_run_query': 'validationRunQuery'
        }

        self._model_name = model_name
        self._trained_model_name = trained_model_name
        self._validation_run_name = validation_run_name
        self._start_timestamp = start_timestamp
        self._completed_timestamp = completed_timestamp
        self._validation_duration = validation_duration
        self._run_status = run_status
        self._status_code = status_code
        self._log = log
        self._settings = settings
        self._validation_run_query = validation_run_query

    @classmethod
    def from_dict(cls, dikt) -> 'MlValidationRun':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The mlValidationRun of this MlValidationRun.  # noqa: E501
        :rtype: MlValidationRun
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_name(self) -> str:
        """Gets the model_name of this MlValidationRun.


        :return: The model_name of this MlValidationRun.
        :rtype: str
        """
        return self._model_name

    @model_name.setter
    def model_name(self, model_name: str):
        """Sets the model_name of this MlValidationRun.


        :param model_name: The model_name of this MlValidationRun.
        :type model_name: str
        """

        self._model_name = model_name

    @property
    def trained_model_name(self) -> str:
        """Gets the trained_model_name of this MlValidationRun.


        :return: The trained_model_name of this MlValidationRun.
        :rtype: str
        """
        return self._trained_model_name

    @trained_model_name.setter
    def trained_model_name(self, trained_model_name: str):
        """Sets the trained_model_name of this MlValidationRun.


        :param trained_model_name: The trained_model_name of this MlValidationRun.
        :type trained_model_name: str
        """

        self._trained_model_name = trained_model_name

    @property
    def validation_run_name(self) -> str:
        """Gets the validation_run_name of this MlValidationRun.


        :return: The validation_run_name of this MlValidationRun.
        :rtype: str
        """
        return self._validation_run_name

    @validation_run_name.setter
    def validation_run_name(self, validation_run_name: str):
        """Sets the validation_run_name of this MlValidationRun.


        :param validation_run_name: The validation_run_name of this MlValidationRun.
        :type validation_run_name: str
        """

        self._validation_run_name = validation_run_name

    @property
    def start_timestamp(self) -> str:
        """Gets the start_timestamp of this MlValidationRun.


        :return: The start_timestamp of this MlValidationRun.
        :rtype: str
        """
        return self._start_timestamp

    @start_timestamp.setter
    def start_timestamp(self, start_timestamp: str):
        """Sets the start_timestamp of this MlValidationRun.


        :param start_timestamp: The start_timestamp of this MlValidationRun.
        :type start_timestamp: str
        """

        self._start_timestamp = start_timestamp

    @property
    def completed_timestamp(self) -> str:
        """Gets the completed_timestamp of this MlValidationRun.


        :return: The completed_timestamp of this MlValidationRun.
        :rtype: str
        """
        return self._completed_timestamp

    @completed_timestamp.setter
    def completed_timestamp(self, completed_timestamp: str):
        """Sets the completed_timestamp of this MlValidationRun.


        :param completed_timestamp: The completed_timestamp of this MlValidationRun.
        :type completed_timestamp: str
        """

        self._completed_timestamp = completed_timestamp

    @property
    def validation_duration(self) -> str:
        """Gets the validation_duration of this MlValidationRun.


        :return: The validation_duration of this MlValidationRun.
        :rtype: str
        """
        return self._validation_duration

    @validation_duration.setter
    def validation_duration(self, validation_duration: str):
        """Sets the validation_duration of this MlValidationRun.


        :param validation_duration: The validation_duration of this MlValidationRun.
        :type validation_duration: str
        """

        self._validation_duration = validation_duration

    @property
    def run_status(self) -> str:
        """Gets the run_status of this MlValidationRun.


        :return: The run_status of this MlValidationRun.
        :rtype: str
        """
        return self._run_status

    @run_status.setter
    def run_status(self, run_status: str):
        """Sets the run_status of this MlValidationRun.


        :param run_status: The run_status of this MlValidationRun.
        :type run_status: str
        """

        self._run_status = run_status

    @property
    def status_code(self) -> str:
        """Gets the status_code of this MlValidationRun.


        :return: The status_code of this MlValidationRun.
        :rtype: str
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code: str):
        """Sets the status_code of this MlValidationRun.


        :param status_code: The status_code of this MlValidationRun.
        :type status_code: str
        """

        self._status_code = status_code

    @property
    def log(self) -> str:
        """Gets the log of this MlValidationRun.


        :return: The log of this MlValidationRun.
        :rtype: str
        """
        return self._log

    @log.setter
    def log(self, log: str):
        """Sets the log of this MlValidationRun.


        :param log: The log of this MlValidationRun.
        :type log: str
        """

        self._log = log

    @property
    def settings(self) -> str:
        """Gets the settings of this MlValidationRun.


        :return: The settings of this MlValidationRun.
        :rtype: str
        """
        return self._settings

    @settings.setter
    def settings(self, settings: str):
        """Sets the settings of this MlValidationRun.


        :param settings: The settings of this MlValidationRun.
        :type settings: str
        """

        self._settings = settings

    @property
    def validation_run_query(self) -> str:
        """Gets the validation_run_query of this MlValidationRun.


        :return: The validation_run_query of this MlValidationRun.
        :rtype: str
        """
        return self._validation_run_query

    @validation_run_query.setter
    def validation_run_query(self, validation_run_query: str):
        """Sets the validation_run_query of this MlValidationRun.


        :param validation_run_query: The validation_run_query of this MlValidationRun.
        :type validation_run_query: str
        """

        self._validation_run_query = validation_run_query
