# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class MlTrainedModel(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, model_name: str=None, trained_model_name: str=None, provider: str=None, trained_timestamp: str=None, model_type: str=None, model_info: str=None):  # noqa: E501
        """MlTrainedModel - a model defined in Swagger

        :param model_name: The model_name of this MlTrainedModel.  # noqa: E501
        :type model_name: str
        :param trained_model_name: The trained_model_name of this MlTrainedModel.  # noqa: E501
        :type trained_model_name: str
        :param provider: The provider of this MlTrainedModel.  # noqa: E501
        :type provider: str
        :param trained_timestamp: The trained_timestamp of this MlTrainedModel.  # noqa: E501
        :type trained_timestamp: str
        :param model_type: The model_type of this MlTrainedModel.  # noqa: E501
        :type model_type: str
        :param model_info: The model_info of this MlTrainedModel.  # noqa: E501
        :type model_info: str
        """
        self.swagger_types = {
            'model_name': str,
            'trained_model_name': str,
            'provider': str,
            'trained_timestamp': str,
            'model_type': str,
            'model_info': str
        }

        self.attribute_map = {
            'model_name': 'modelName',
            'trained_model_name': 'trainedModelName',
            'provider': 'provider',
            'trained_timestamp': 'trainedTimestamp',
            'model_type': 'modelType',
            'model_info': 'modelInfo'
        }

        self._model_name = model_name
        self._trained_model_name = trained_model_name
        self._provider = provider
        self._trained_timestamp = trained_timestamp
        self._model_type = model_type
        self._model_info = model_info

    @classmethod
    def from_dict(cls, dikt) -> 'MlTrainedModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The mlTrainedModel of this MlTrainedModel.  # noqa: E501
        :rtype: MlTrainedModel
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_name(self) -> str:
        """Gets the model_name of this MlTrainedModel.


        :return: The model_name of this MlTrainedModel.
        :rtype: str
        """
        return self._model_name

    @model_name.setter
    def model_name(self, model_name: str):
        """Sets the model_name of this MlTrainedModel.


        :param model_name: The model_name of this MlTrainedModel.
        :type model_name: str
        """

        self._model_name = model_name

    @property
    def trained_model_name(self) -> str:
        """Gets the trained_model_name of this MlTrainedModel.


        :return: The trained_model_name of this MlTrainedModel.
        :rtype: str
        """
        return self._trained_model_name

    @trained_model_name.setter
    def trained_model_name(self, trained_model_name: str):
        """Sets the trained_model_name of this MlTrainedModel.


        :param trained_model_name: The trained_model_name of this MlTrainedModel.
        :type trained_model_name: str
        """

        self._trained_model_name = trained_model_name

    @property
    def provider(self) -> str:
        """Gets the provider of this MlTrainedModel.


        :return: The provider of this MlTrainedModel.
        :rtype: str
        """
        return self._provider

    @provider.setter
    def provider(self, provider: str):
        """Sets the provider of this MlTrainedModel.


        :param provider: The provider of this MlTrainedModel.
        :type provider: str
        """

        self._provider = provider

    @property
    def trained_timestamp(self) -> str:
        """Gets the trained_timestamp of this MlTrainedModel.


        :return: The trained_timestamp of this MlTrainedModel.
        :rtype: str
        """
        return self._trained_timestamp

    @trained_timestamp.setter
    def trained_timestamp(self, trained_timestamp: str):
        """Sets the trained_timestamp of this MlTrainedModel.


        :param trained_timestamp: The trained_timestamp of this MlTrainedModel.
        :type trained_timestamp: str
        """

        self._trained_timestamp = trained_timestamp

    @property
    def model_type(self) -> str:
        """Gets the model_type of this MlTrainedModel.


        :return: The model_type of this MlTrainedModel.
        :rtype: str
        """
        return self._model_type

    @model_type.setter
    def model_type(self, model_type: str):
        """Sets the model_type of this MlTrainedModel.


        :param model_type: The model_type of this MlTrainedModel.
        :type model_type: str
        """

        self._model_type = model_type

    @property
    def model_info(self) -> str:
        """Gets the model_info of this MlTrainedModel.


        :return: The model_info of this MlTrainedModel.
        :rtype: str
        """
        return self._model_info

    @model_info.setter
    def model_info(self, model_info: str):
        """Sets the model_info of this MlTrainedModel.


        :param model_info: The model_info of this MlTrainedModel.
        :type model_info: str
        """

        self._model_info = model_info
